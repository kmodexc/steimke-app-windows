// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace HeySteimke.Rest.HeySteimkeBase.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Item
    {
        /// <summary>
        /// Initializes a new instance of the Item class.
        /// </summary>
        public Item() { }

        public Item(Item it)
        {
            this.Id = it.Id;
            this.Name = it.Name;
            this.Placeid = it.Placeid;
            this.Priority = it.Priority;
            this.Shortdesc = it.Shortdesc;
            this.State = it.State;
            this.Workload = it.Workload;
            this.AssignedId = it.AssignedId;
            this.Assignedtime = it.Assignedtime;
            this.Createtime = it.Createtime;
            this.CreatorId = it.CreatorId;
            this.Desc = it.Desc;
            this.Finishedtime = it.Finishedtime;
        }

        /// <summary>
        /// Initializes a new instance of the Item class.
        /// </summary>
        public Item(int id, string state = default(string), string name = default(string), string shortdesc = default(string), string desc = default(string), int? creatorId = default(int?), int? assignedId = default(int?), int? priority = default(int?), int? workload = default(int?), int? placeid = default(int?), TimeStamp createtime = default(TimeStamp), TimeStamp assignedtime = default(TimeStamp), TimeStamp finishedtime = default(TimeStamp))
        {
            Id = id;
            State = state;
            Name = name;
            Shortdesc = shortdesc;
            Desc = desc;
            CreatorId = creatorId;
            AssignedId = assignedId;
            Priority = priority;
            Workload = workload;
            Placeid = placeid;
            Createtime = createtime;
            Assignedtime = assignedtime;
            Finishedtime = finishedtime;
        }

        /// <summary>
        /// Identifier
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// State. Possible values include: 'created', 'assigned',
        /// 'inprogress', 'finished', 'paused', 'aborted'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Name of Item
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Short description for item
        /// </summary>
        [JsonProperty(PropertyName = "shortdesc")]
        public string Shortdesc { get; set; }

        /// <summary>
        /// Detailed Itemdescription
        /// </summary>
        [JsonProperty(PropertyName = "desc")]
        public string Desc { get; set; }

        /// <summary>
        /// ID of creator of this item
        /// </summary>
        [JsonProperty(PropertyName = "creatorId")]
        public int? CreatorId { get; set; }

        /// <summary>
        /// ID of assigned person for this item
        /// </summary>
        [JsonProperty(PropertyName = "assignedId")]
        public int? AssignedId { get; set; }

        /// <summary>
        /// priority of this item
        /// </summary>
        [JsonProperty(PropertyName = "priority")]
        public int? Priority { get; set; }

        /// <summary>
        /// workload for this item
        /// </summary>
        [JsonProperty(PropertyName = "workload")]
        public int? Workload { get; set; }

        /// <summary>
        /// id of place or category
        /// </summary>
        [JsonProperty(PropertyName = "placeid")]
        public int? Placeid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createtime")]
        public TimeStamp Createtime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "assignedtime")]
        public TimeStamp Assignedtime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "finishedtime")]
        public TimeStamp Finishedtime { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
        }
    }
}
